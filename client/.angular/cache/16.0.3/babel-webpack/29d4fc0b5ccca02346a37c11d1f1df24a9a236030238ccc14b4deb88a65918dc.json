{"ast":null,"code":"const {\n  FetchError,\n  Headers,\n  Request,\n  Response\n} = require('minipass-fetch');\nconst configureOptions = require('./options.js');\nconst fetch = require('./fetch.js');\nconst makeFetchHappen = (url, opts) => {\n  const options = configureOptions(opts);\n  const request = new Request(url, options);\n  return fetch(request, options);\n};\nmakeFetchHappen.defaults = (defaultUrl, defaultOptions = {}, wrappedFetch = makeFetchHappen) => {\n  if (typeof defaultUrl === 'object') {\n    defaultOptions = defaultUrl;\n    defaultUrl = null;\n  }\n  const defaultedFetch = (url, options = {}) => {\n    const finalUrl = url || defaultUrl;\n    const finalOptions = {\n      ...defaultOptions,\n      ...options,\n      headers: {\n        ...defaultOptions.headers,\n        ...options.headers\n      }\n    };\n    return wrappedFetch(finalUrl, finalOptions);\n  };\n  defaultedFetch.defaults = (defaultUrl1, defaultOptions1 = {}) => makeFetchHappen.defaults(defaultUrl1, defaultOptions1, defaultedFetch);\n  return defaultedFetch;\n};\nmodule.exports = makeFetchHappen;\nmodule.exports.FetchError = FetchError;\nmodule.exports.Headers = Headers;\nmodule.exports.Request = Request;\nmodule.exports.Response = Response;","map":{"version":3,"names":["FetchError","Headers","Request","Response","require","configureOptions","fetch","makeFetchHappen","url","opts","options","request","defaults","defaultUrl","defaultOptions","wrappedFetch","defaultedFetch","finalUrl","finalOptions","headers","defaultUrl1","defaultOptions1","module","exports"],"sources":["C:/Users/shinz/OneDrive/Desktop/web/ecommerce/node_modules/make-fetch-happen/lib/index.js"],"sourcesContent":["const { FetchError, Headers, Request, Response } = require('minipass-fetch')\n\nconst configureOptions = require('./options.js')\nconst fetch = require('./fetch.js')\n\nconst makeFetchHappen = (url, opts) => {\n  const options = configureOptions(opts)\n\n  const request = new Request(url, options)\n  return fetch(request, options)\n}\n\nmakeFetchHappen.defaults = (defaultUrl, defaultOptions = {}, wrappedFetch = makeFetchHappen) => {\n  if (typeof defaultUrl === 'object') {\n    defaultOptions = defaultUrl\n    defaultUrl = null\n  }\n\n  const defaultedFetch = (url, options = {}) => {\n    const finalUrl = url || defaultUrl\n    const finalOptions = {\n      ...defaultOptions,\n      ...options,\n      headers: {\n        ...defaultOptions.headers,\n        ...options.headers,\n      },\n    }\n    return wrappedFetch(finalUrl, finalOptions)\n  }\n\n  defaultedFetch.defaults = (defaultUrl1, defaultOptions1 = {}) =>\n    makeFetchHappen.defaults(defaultUrl1, defaultOptions1, defaultedFetch)\n  return defaultedFetch\n}\n\nmodule.exports = makeFetchHappen\nmodule.exports.FetchError = FetchError\nmodule.exports.Headers = Headers\nmodule.exports.Request = Request\nmodule.exports.Response = Response\n"],"mappings":"AAAA,MAAM;EAAEA,UAAU;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAS,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE5E,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,cAAc,CAAC;AAChD,MAAME,KAAK,GAAGF,OAAO,CAAC,YAAY,CAAC;AAEnC,MAAMG,eAAe,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;EACrC,MAAMC,OAAO,GAAGL,gBAAgB,CAACI,IAAI,CAAC;EAEtC,MAAME,OAAO,GAAG,IAAIT,OAAO,CAACM,GAAG,EAAEE,OAAO,CAAC;EACzC,OAAOJ,KAAK,CAACK,OAAO,EAAED,OAAO,CAAC;AAChC,CAAC;AAEDH,eAAe,CAACK,QAAQ,GAAG,CAACC,UAAU,EAAEC,cAAc,GAAG,CAAC,CAAC,EAAEC,YAAY,GAAGR,eAAe,KAAK;EAC9F,IAAI,OAAOM,UAAU,KAAK,QAAQ,EAAE;IAClCC,cAAc,GAAGD,UAAU;IAC3BA,UAAU,GAAG,IAAI;EACnB;EAEA,MAAMG,cAAc,GAAGA,CAACR,GAAG,EAAEE,OAAO,GAAG,CAAC,CAAC,KAAK;IAC5C,MAAMO,QAAQ,GAAGT,GAAG,IAAIK,UAAU;IAClC,MAAMK,YAAY,GAAG;MACnB,GAAGJ,cAAc;MACjB,GAAGJ,OAAO;MACVS,OAAO,EAAE;QACP,GAAGL,cAAc,CAACK,OAAO;QACzB,GAAGT,OAAO,CAACS;MACb;IACF,CAAC;IACD,OAAOJ,YAAY,CAACE,QAAQ,EAAEC,YAAY,CAAC;EAC7C,CAAC;EAEDF,cAAc,CAACJ,QAAQ,GAAG,CAACQ,WAAW,EAAEC,eAAe,GAAG,CAAC,CAAC,KAC1Dd,eAAe,CAACK,QAAQ,CAACQ,WAAW,EAAEC,eAAe,EAAEL,cAAc,CAAC;EACxE,OAAOA,cAAc;AACvB,CAAC;AAEDM,MAAM,CAACC,OAAO,GAAGhB,eAAe;AAChCe,MAAM,CAACC,OAAO,CAACvB,UAAU,GAAGA,UAAU;AACtCsB,MAAM,CAACC,OAAO,CAACtB,OAAO,GAAGA,OAAO;AAChCqB,MAAM,CAACC,OAAO,CAACrB,OAAO,GAAGA,OAAO;AAChCoB,MAAM,CAACC,OAAO,CAACpB,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}