{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"C:/Users/shinz/OneDrive/Desktop/web/ecommerce/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst AggregateError = require('aggregate-error');\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (iterable, mapper, {\n    concurrency = Infinity,\n    stopOnError = true\n  } = {}) {\n    return new Promise((resolve, reject) => {\n      if (typeof mapper !== 'function') {\n        throw new TypeError('Mapper function is required');\n      }\n      if (!((Number.isSafeInteger(concurrency) || concurrency === Infinity) && concurrency >= 1)) {\n        throw new TypeError(`Expected \\`concurrency\\` to be an integer from 1 and up or \\`Infinity\\`, got \\`${concurrency}\\` (${typeof concurrency})`);\n      }\n      const result = [];\n      const errors = [];\n      const iterator = iterable[Symbol.iterator]();\n      let isRejected = false;\n      let isIterableDone = false;\n      let resolvingCount = 0;\n      let currentIndex = 0;\n      const next = () => {\n        if (isRejected) {\n          return;\n        }\n        const nextItem = iterator.next();\n        const index = currentIndex;\n        currentIndex++;\n        if (nextItem.done) {\n          isIterableDone = true;\n          if (resolvingCount === 0) {\n            if (!stopOnError && errors.length !== 0) {\n              reject(new AggregateError(errors));\n            } else {\n              resolve(result);\n            }\n          }\n          return;\n        }\n        resolvingCount++;\n        _asyncToGenerator(function* () {\n          try {\n            const element = yield nextItem.value;\n            result[index] = yield mapper(element, index);\n            resolvingCount--;\n            next();\n          } catch (error) {\n            if (stopOnError) {\n              isRejected = true;\n              reject(error);\n            } else {\n              errors.push(error);\n              resolvingCount--;\n              next();\n            }\n          }\n        })();\n      };\n      for (let i = 0; i < concurrency; i++) {\n        next();\n        if (isIterableDone) {\n          break;\n        }\n      }\n    });\n  });\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["_asyncToGenerator","require","default","AggregateError","module","exports","_ref","iterable","mapper","concurrency","Infinity","stopOnError","Promise","resolve","reject","TypeError","Number","isSafeInteger","result","errors","iterator","Symbol","isRejected","isIterableDone","resolvingCount","currentIndex","next","nextItem","index","done","length","element","value","error","push","i","_x","_x2","apply","arguments"],"sources":["C:/Users/shinz/OneDrive/Desktop/web/ecommerce/node_modules/p-map/index.js"],"sourcesContent":["'use strict';\nconst AggregateError = require('aggregate-error');\n\nmodule.exports = async (\n\titerable,\n\tmapper,\n\t{\n\t\tconcurrency = Infinity,\n\t\tstopOnError = true\n\t} = {}\n) => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (typeof mapper !== 'function') {\n\t\t\tthrow new TypeError('Mapper function is required');\n\t\t}\n\n\t\tif (!((Number.isSafeInteger(concurrency) || concurrency === Infinity) && concurrency >= 1)) {\n\t\t\tthrow new TypeError(`Expected \\`concurrency\\` to be an integer from 1 and up or \\`Infinity\\`, got \\`${concurrency}\\` (${typeof concurrency})`);\n\t\t}\n\n\t\tconst result = [];\n\t\tconst errors = [];\n\t\tconst iterator = iterable[Symbol.iterator]();\n\t\tlet isRejected = false;\n\t\tlet isIterableDone = false;\n\t\tlet resolvingCount = 0;\n\t\tlet currentIndex = 0;\n\n\t\tconst next = () => {\n\t\t\tif (isRejected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextItem = iterator.next();\n\t\t\tconst index = currentIndex;\n\t\t\tcurrentIndex++;\n\n\t\t\tif (nextItem.done) {\n\t\t\t\tisIterableDone = true;\n\n\t\t\t\tif (resolvingCount === 0) {\n\t\t\t\t\tif (!stopOnError && errors.length !== 0) {\n\t\t\t\t\t\treject(new AggregateError(errors));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolvingCount++;\n\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst element = await nextItem.value;\n\t\t\t\t\tresult[index] = await mapper(element, index);\n\t\t\t\t\tresolvingCount--;\n\t\t\t\t\tnext();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (stopOnError) {\n\t\t\t\t\t\tisRejected = true;\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors.push(error);\n\t\t\t\t\t\tresolvingCount--;\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})();\n\t\t};\n\n\t\tfor (let i = 0; i < concurrency; i++) {\n\t\t\tnext();\n\n\t\t\tif (isIterableDone) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n};\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,iBAAA,GAAAC,OAAA,0GAAAC,OAAA;AACb,MAAMC,cAAc,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAEjDG,MAAM,CAACC,OAAO;EAAA,IAAAC,IAAA,GAAAN,iBAAA,CAAG,WAChBO,QAAQ,EACRC,MAAM,EACN;IACCC,WAAW,GAAGC,QAAQ;IACtBC,WAAW,GAAG;EACf,CAAC,GAAG,CAAC,CAAC,EACF;IACJ,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACvC,IAAI,OAAON,MAAM,KAAK,UAAU,EAAE;QACjC,MAAM,IAAIO,SAAS,CAAC,6BAA6B,CAAC;MACnD;MAEA,IAAI,EAAE,CAACC,MAAM,CAACC,aAAa,CAACR,WAAW,CAAC,IAAIA,WAAW,KAAKC,QAAQ,KAAKD,WAAW,IAAI,CAAC,CAAC,EAAE;QAC3F,MAAM,IAAIM,SAAS,CAAE,kFAAiFN,WAAY,OAAM,OAAOA,WAAY,GAAE,CAAC;MAC/I;MAEA,MAAMS,MAAM,GAAG,EAAE;MACjB,MAAMC,MAAM,GAAG,EAAE;MACjB,MAAMC,QAAQ,GAAGb,QAAQ,CAACc,MAAM,CAACD,QAAQ,CAAC,EAAE;MAC5C,IAAIE,UAAU,GAAG,KAAK;MACtB,IAAIC,cAAc,GAAG,KAAK;MAC1B,IAAIC,cAAc,GAAG,CAAC;MACtB,IAAIC,YAAY,GAAG,CAAC;MAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;QAClB,IAAIJ,UAAU,EAAE;UACf;QACD;QAEA,MAAMK,QAAQ,GAAGP,QAAQ,CAACM,IAAI,EAAE;QAChC,MAAME,KAAK,GAAGH,YAAY;QAC1BA,YAAY,EAAE;QAEd,IAAIE,QAAQ,CAACE,IAAI,EAAE;UAClBN,cAAc,GAAG,IAAI;UAErB,IAAIC,cAAc,KAAK,CAAC,EAAE;YACzB,IAAI,CAACb,WAAW,IAAIQ,MAAM,CAACW,MAAM,KAAK,CAAC,EAAE;cACxChB,MAAM,CAAC,IAAIX,cAAc,CAACgB,MAAM,CAAC,CAAC;YACnC,CAAC,MAAM;cACNN,OAAO,CAACK,MAAM,CAAC;YAChB;UACD;UAEA;QACD;QAEAM,cAAc,EAAE;QAEhBxB,iBAAA,CAAC,aAAY;UACZ,IAAI;YACH,MAAM+B,OAAO,SAASJ,QAAQ,CAACK,KAAK;YACpCd,MAAM,CAACU,KAAK,CAAC,SAASpB,MAAM,CAACuB,OAAO,EAAEH,KAAK,CAAC;YAC5CJ,cAAc,EAAE;YAChBE,IAAI,EAAE;UACP,CAAC,CAAC,OAAOO,KAAK,EAAE;YACf,IAAItB,WAAW,EAAE;cAChBW,UAAU,GAAG,IAAI;cACjBR,MAAM,CAACmB,KAAK,CAAC;YACd,CAAC,MAAM;cACNd,MAAM,CAACe,IAAI,CAACD,KAAK,CAAC;cAClBT,cAAc,EAAE;cAChBE,IAAI,EAAE;YACP;UACD;QACD,CAAC,GAAG;MACL,CAAC;MAED,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1B,WAAW,EAAE0B,CAAC,EAAE,EAAE;QACrCT,IAAI,EAAE;QAEN,IAAIH,cAAc,EAAE;UACnB;QACD;MACD;IACD,CAAC,CAAC;EACH,CAAC;EAAA,iBAAAa,EAAA,EAAAC,GAAA;IAAA,OAAA/B,IAAA,CAAAgC,KAAA,OAAAC,SAAA;EAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}