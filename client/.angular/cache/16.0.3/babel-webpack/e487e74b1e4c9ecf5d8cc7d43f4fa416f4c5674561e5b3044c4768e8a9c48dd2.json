{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet ActivateGuardService = class ActivateGuardService {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.authService.isAuthenticated()) return true;else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n};\nActivateGuardService = __decorate([Injectable({\n  providedIn: 'root'\n})], ActivateGuardService);\nexport { ActivateGuardService };","map":{"version":3,"names":["Injectable","ActivateGuardService","constructor","authService","router","canActivate","route","state","isAuthenticated","navigate","__decorate","providedIn"],"sources":["C:\\Users\\shinz\\OneDrive\\Desktop\\web\\ecommerce\\client\\src\\app\\services\\activate-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivateGuardService implements CanActivate{\n  constructor(private authService: AuthService, private router: Ro) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if(this.authService.isAuthenticated()) return true\n    else {\n      this.router.navigate(['/login'])\n      return false\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAO1C,IAAaC,oBAAoB,GAAjC,MAAaA,oBAAoB;EAC/BC,YAAoBC,WAAwB,EAAUC,MAAU;IAA5C,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAQ;EACpEC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,IAAG,IAAI,CAACJ,WAAW,CAACK,eAAe,EAAE,EAAE,OAAO,IAAI,MAC7C;MACH,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;CACD;AATYR,oBAAoB,GAAAS,UAAA,EAHhCV,UAAU,CAAC;EACVW,UAAU,EAAE;CACb,CAAC,C,EACWV,oBAAoB,CAShC;SATYA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}