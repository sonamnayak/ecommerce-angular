{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateSocksClientChainOptions = exports.validateSocksClientOptions = void 0;\nconst util_1 = require(\"./util\");\nconst constants_1 = require(\"./constants\");\nconst stream = require(\"stream\");\n/**\n * Validates the provided SocksClientOptions\n * @param options { SocksClientOptions }\n * @param acceptedCommands { string[] } A list of accepted SocksProxy commands.\n */\nfunction validateSocksClientOptions(options, acceptedCommands = ['connect', 'bind', 'associate']) {\n  // Check SOCKs command option.\n  if (!constants_1.SocksCommand[options.command]) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommand, options);\n  }\n  // Check SocksCommand for acceptable command.\n  if (acceptedCommands.indexOf(options.command) === -1) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommandForOperation, options);\n  }\n  // Check destination\n  if (!isValidSocksRemoteHost(options.destination)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsDestination, options);\n  }\n  // Check SOCKS proxy to use\n  if (!isValidSocksProxy(options.proxy)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxy, options);\n  }\n  // Validate custom auth (if set)\n  validateCustomProxyAuth(options.proxy, options);\n  // Check timeout\n  if (options.timeout && !isValidTimeoutValue(options.timeout)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsTimeout, options);\n  }\n  // Check existing_socket (if provided)\n  if (options.existing_socket && !(options.existing_socket instanceof stream.Duplex)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsExistingSocket, options);\n  }\n}\nexports.validateSocksClientOptions = validateSocksClientOptions;\n/**\n * Validates the SocksClientChainOptions\n * @param options { SocksClientChainOptions }\n */\nfunction validateSocksClientChainOptions(options) {\n  // Only connect is supported when chaining.\n  if (options.command !== 'connect') {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommandChain, options);\n  }\n  // Check destination\n  if (!isValidSocksRemoteHost(options.destination)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsDestination, options);\n  }\n  // Validate proxies (length)\n  if (!(options.proxies && Array.isArray(options.proxies) && options.proxies.length >= 2)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxiesLength, options);\n  }\n  // Validate proxies\n  options.proxies.forEach(proxy => {\n    if (!isValidSocksProxy(proxy)) {\n      throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxy, options);\n    }\n    // Validate custom auth (if set)\n    validateCustomProxyAuth(proxy, options);\n  });\n  // Check timeout\n  if (options.timeout && !isValidTimeoutValue(options.timeout)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsTimeout, options);\n  }\n}\nexports.validateSocksClientChainOptions = validateSocksClientChainOptions;\nfunction validateCustomProxyAuth(proxy, options) {\n  if (proxy.custom_auth_method !== undefined) {\n    // Invalid auth method range\n    if (proxy.custom_auth_method < constants_1.SOCKS5_CUSTOM_AUTH_START || proxy.custom_auth_method > constants_1.SOCKS5_CUSTOM_AUTH_END) {\n      throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthRange, options);\n    }\n    // Missing custom_auth_request_handler\n    if (proxy.custom_auth_request_handler === undefined || typeof proxy.custom_auth_request_handler !== 'function') {\n      throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n    }\n    // Missing custom_auth_response_size\n    if (proxy.custom_auth_response_size === undefined) {\n      throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n    }\n    // Missing/invalid custom_auth_response_handler\n    if (proxy.custom_auth_response_handler === undefined || typeof proxy.custom_auth_response_handler !== 'function') {\n      throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n    }\n  }\n}\n/**\n * Validates a SocksRemoteHost\n * @param remoteHost { SocksRemoteHost }\n */\nfunction isValidSocksRemoteHost(remoteHost) {\n  return remoteHost && typeof remoteHost.host === 'string' && typeof remoteHost.port === 'number' && remoteHost.port >= 0 && remoteHost.port <= 65535;\n}\n/**\n * Validates a SocksProxy\n * @param proxy { SocksProxy }\n */\nfunction isValidSocksProxy(proxy) {\n  return proxy && (typeof proxy.host === 'string' || typeof proxy.ipaddress === 'string') && typeof proxy.port === 'number' && proxy.port >= 0 && proxy.port <= 65535 && (proxy.type === 4 || proxy.type === 5);\n}\n/**\n * Validates a timeout value.\n * @param value { Number }\n */\nfunction isValidTimeoutValue(value) {\n  return typeof value === 'number' && value > 0;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","validateSocksClientChainOptions","validateSocksClientOptions","util_1","require","constants_1","stream","options","acceptedCommands","SocksCommand","command","SocksClientError","ERRORS","InvalidSocksCommand","indexOf","InvalidSocksCommandForOperation","isValidSocksRemoteHost","destination","InvalidSocksClientOptionsDestination","isValidSocksProxy","proxy","InvalidSocksClientOptionsProxy","validateCustomProxyAuth","timeout","isValidTimeoutValue","InvalidSocksClientOptionsTimeout","existing_socket","Duplex","InvalidSocksClientOptionsExistingSocket","InvalidSocksCommandChain","proxies","Array","isArray","length","InvalidSocksClientOptionsProxiesLength","forEach","custom_auth_method","undefined","SOCKS5_CUSTOM_AUTH_START","SOCKS5_CUSTOM_AUTH_END","InvalidSocksClientOptionsCustomAuthRange","custom_auth_request_handler","InvalidSocksClientOptionsCustomAuthOptions","custom_auth_response_size","custom_auth_response_handler","remoteHost","host","port","ipaddress","type"],"sources":["C:/Users/shinz/OneDrive/Desktop/web/ecommerce/node_modules/socks/build/common/helpers.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSocksClientChainOptions = exports.validateSocksClientOptions = void 0;\nconst util_1 = require(\"./util\");\nconst constants_1 = require(\"./constants\");\nconst stream = require(\"stream\");\n/**\n * Validates the provided SocksClientOptions\n * @param options { SocksClientOptions }\n * @param acceptedCommands { string[] } A list of accepted SocksProxy commands.\n */\nfunction validateSocksClientOptions(options, acceptedCommands = ['connect', 'bind', 'associate']) {\n    // Check SOCKs command option.\n    if (!constants_1.SocksCommand[options.command]) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommand, options);\n    }\n    // Check SocksCommand for acceptable command.\n    if (acceptedCommands.indexOf(options.command) === -1) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommandForOperation, options);\n    }\n    // Check destination\n    if (!isValidSocksRemoteHost(options.destination)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsDestination, options);\n    }\n    // Check SOCKS proxy to use\n    if (!isValidSocksProxy(options.proxy)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxy, options);\n    }\n    // Validate custom auth (if set)\n    validateCustomProxyAuth(options.proxy, options);\n    // Check timeout\n    if (options.timeout && !isValidTimeoutValue(options.timeout)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsTimeout, options);\n    }\n    // Check existing_socket (if provided)\n    if (options.existing_socket &&\n        !(options.existing_socket instanceof stream.Duplex)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsExistingSocket, options);\n    }\n}\nexports.validateSocksClientOptions = validateSocksClientOptions;\n/**\n * Validates the SocksClientChainOptions\n * @param options { SocksClientChainOptions }\n */\nfunction validateSocksClientChainOptions(options) {\n    // Only connect is supported when chaining.\n    if (options.command !== 'connect') {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommandChain, options);\n    }\n    // Check destination\n    if (!isValidSocksRemoteHost(options.destination)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsDestination, options);\n    }\n    // Validate proxies (length)\n    if (!(options.proxies &&\n        Array.isArray(options.proxies) &&\n        options.proxies.length >= 2)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxiesLength, options);\n    }\n    // Validate proxies\n    options.proxies.forEach((proxy) => {\n        if (!isValidSocksProxy(proxy)) {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxy, options);\n        }\n        // Validate custom auth (if set)\n        validateCustomProxyAuth(proxy, options);\n    });\n    // Check timeout\n    if (options.timeout && !isValidTimeoutValue(options.timeout)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsTimeout, options);\n    }\n}\nexports.validateSocksClientChainOptions = validateSocksClientChainOptions;\nfunction validateCustomProxyAuth(proxy, options) {\n    if (proxy.custom_auth_method !== undefined) {\n        // Invalid auth method range\n        if (proxy.custom_auth_method < constants_1.SOCKS5_CUSTOM_AUTH_START ||\n            proxy.custom_auth_method > constants_1.SOCKS5_CUSTOM_AUTH_END) {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthRange, options);\n        }\n        // Missing custom_auth_request_handler\n        if (proxy.custom_auth_request_handler === undefined ||\n            typeof proxy.custom_auth_request_handler !== 'function') {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n        }\n        // Missing custom_auth_response_size\n        if (proxy.custom_auth_response_size === undefined) {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n        }\n        // Missing/invalid custom_auth_response_handler\n        if (proxy.custom_auth_response_handler === undefined ||\n            typeof proxy.custom_auth_response_handler !== 'function') {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n        }\n    }\n}\n/**\n * Validates a SocksRemoteHost\n * @param remoteHost { SocksRemoteHost }\n */\nfunction isValidSocksRemoteHost(remoteHost) {\n    return (remoteHost &&\n        typeof remoteHost.host === 'string' &&\n        typeof remoteHost.port === 'number' &&\n        remoteHost.port >= 0 &&\n        remoteHost.port <= 65535);\n}\n/**\n * Validates a SocksProxy\n * @param proxy { SocksProxy }\n */\nfunction isValidSocksProxy(proxy) {\n    return (proxy &&\n        (typeof proxy.host === 'string' || typeof proxy.ipaddress === 'string') &&\n        typeof proxy.port === 'number' &&\n        proxy.port >= 0 &&\n        proxy.port <= 65535 &&\n        (proxy.type === 4 || proxy.type === 5));\n}\n/**\n * Validates a timeout value.\n * @param value { Number }\n */\nfunction isValidTimeoutValue(value) {\n    return typeof value === 'number' && value > 0;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}