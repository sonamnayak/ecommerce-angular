{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst net_1 = __importDefault(require(\"net\"));\nconst tls_1 = __importDefault(require(\"tls\"));\nconst url_1 = __importDefault(require(\"url\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst once_1 = __importDefault(require(\"@tootallnate/once\"));\nconst agent_base_1 = require(\"agent-base\");\nconst debug = (0, debug_1.default)('http-proxy-agent');\nfunction isHTTPS(protocol) {\n  return typeof protocol === 'string' ? /^https:?$/i.test(protocol) : false;\n}\n/**\n * The `HttpProxyAgent` implements an HTTP Agent subclass that connects\n * to the specified \"HTTP proxy server\" in order to proxy HTTP requests.\n *\n * @api public\n */\nclass HttpProxyAgent extends agent_base_1.Agent {\n  constructor(_opts) {\n    let opts;\n    if (typeof _opts === 'string') {\n      opts = url_1.default.parse(_opts);\n    } else {\n      opts = _opts;\n    }\n    if (!opts) {\n      throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');\n    }\n    debug('Creating new HttpProxyAgent instance: %o', opts);\n    super(opts);\n    const proxy = Object.assign({}, opts);\n    // If `true`, then connect to the proxy server over TLS.\n    // Defaults to `false`.\n    this.secureProxy = opts.secureProxy || isHTTPS(proxy.protocol);\n    // Prefer `hostname` over `host`, and set the `port` if needed.\n    proxy.host = proxy.hostname || proxy.host;\n    if (typeof proxy.port === 'string') {\n      proxy.port = parseInt(proxy.port, 10);\n    }\n    if (!proxy.port && proxy.host) {\n      proxy.port = this.secureProxy ? 443 : 80;\n    }\n    if (proxy.host && proxy.path) {\n      // If both a `host` and `path` are specified then it's most likely\n      // the result of a `url.parse()` call... we need to remove the\n      // `path` portion so that `net.connect()` doesn't attempt to open\n      // that as a Unix socket file.\n      delete proxy.path;\n      delete proxy.pathname;\n    }\n    this.proxy = proxy;\n  }\n  /**\n   * Called when the node-core HTTP client library is creating a\n   * new HTTP request.\n   *\n   * @api protected\n   */\n  callback(req, opts) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        proxy,\n        secureProxy\n      } = this;\n      const parsed = url_1.default.parse(req.path);\n      if (!parsed.protocol) {\n        parsed.protocol = 'http:';\n      }\n      if (!parsed.hostname) {\n        parsed.hostname = opts.hostname || opts.host || null;\n      }\n      if (parsed.port == null && typeof opts.port) {\n        parsed.port = String(opts.port);\n      }\n      if (parsed.port === '80') {\n        // if port is 80, then we can remove the port so that the\n        // \":80\" portion is not on the produced URL\n        parsed.port = '';\n      }\n      // Change the `http.ClientRequest` instance's \"path\" field\n      // to the absolute path of the URL that will be requested.\n      req.path = url_1.default.format(parsed);\n      // Inject the `Proxy-Authorization` header if necessary.\n      if (proxy.auth) {\n        req.setHeader('Proxy-Authorization', `Basic ${Buffer.from(proxy.auth).toString('base64')}`);\n      }\n      // Create a socket connection to the proxy server.\n      let socket;\n      if (secureProxy) {\n        debug('Creating `tls.Socket`: %o', proxy);\n        socket = tls_1.default.connect(proxy);\n      } else {\n        debug('Creating `net.Socket`: %o', proxy);\n        socket = net_1.default.connect(proxy);\n      }\n      // At this point, the http ClientRequest's internal `_header` field\n      // might have already been set. If this is the case then we'll need\n      // to re-generate the string since we just changed the `req.path`.\n      if (req._header) {\n        let first;\n        let endOfHeaders;\n        debug('Regenerating stored HTTP header string for request');\n        req._header = null;\n        req._implicitHeader();\n        if (req.output && req.output.length > 0) {\n          // Node < 12\n          debug('Patching connection write() output buffer with updated header');\n          first = req.output[0];\n          endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n          req.output[0] = req._header + first.substring(endOfHeaders);\n          debug('Output buffer: %o', req.output);\n        } else if (req.outputData && req.outputData.length > 0) {\n          // Node >= 12\n          debug('Patching connection write() output buffer with updated header');\n          first = req.outputData[0].data;\n          endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n          req.outputData[0].data = req._header + first.substring(endOfHeaders);\n          debug('Output buffer: %o', req.outputData[0].data);\n        }\n      }\n      // Wait for the socket's `connect` event, so that this `callback()`\n      // function throws instead of the `http` request machinery. This is\n      // important for i.e. `PacProxyAgent` which determines a failed proxy\n      // connection via the `callback()` function throwing.\n      yield (0, once_1.default)(socket, 'connect');\n      return socket;\n    });\n  }\n}\nexports.default = HttpProxyAgent;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","net_1","require","tls_1","url_1","debug_1","once_1","agent_base_1","debug","default","isHTTPS","protocol","test","HttpProxyAgent","Agent","constructor","_opts","opts","parse","Error","proxy","assign","secureProxy","host","hostname","port","parseInt","path","pathname","callback","req","parsed","String","format","auth","setHeader","Buffer","from","toString","socket","connect","_header","first","endOfHeaders","_implicitHeader","output","length","indexOf","substring","outputData","data"],"sources":["C:/Users/shinz/OneDrive/Desktop/web/ecommerce/node_modules/http-proxy-agent/dist/agent.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst net_1 = __importDefault(require(\"net\"));\nconst tls_1 = __importDefault(require(\"tls\"));\nconst url_1 = __importDefault(require(\"url\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst once_1 = __importDefault(require(\"@tootallnate/once\"));\nconst agent_base_1 = require(\"agent-base\");\nconst debug = (0, debug_1.default)('http-proxy-agent');\nfunction isHTTPS(protocol) {\n    return typeof protocol === 'string' ? /^https:?$/i.test(protocol) : false;\n}\n/**\n * The `HttpProxyAgent` implements an HTTP Agent subclass that connects\n * to the specified \"HTTP proxy server\" in order to proxy HTTP requests.\n *\n * @api public\n */\nclass HttpProxyAgent extends agent_base_1.Agent {\n    constructor(_opts) {\n        let opts;\n        if (typeof _opts === 'string') {\n            opts = url_1.default.parse(_opts);\n        }\n        else {\n            opts = _opts;\n        }\n        if (!opts) {\n            throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');\n        }\n        debug('Creating new HttpProxyAgent instance: %o', opts);\n        super(opts);\n        const proxy = Object.assign({}, opts);\n        // If `true`, then connect to the proxy server over TLS.\n        // Defaults to `false`.\n        this.secureProxy = opts.secureProxy || isHTTPS(proxy.protocol);\n        // Prefer `hostname` over `host`, and set the `port` if needed.\n        proxy.host = proxy.hostname || proxy.host;\n        if (typeof proxy.port === 'string') {\n            proxy.port = parseInt(proxy.port, 10);\n        }\n        if (!proxy.port && proxy.host) {\n            proxy.port = this.secureProxy ? 443 : 80;\n        }\n        if (proxy.host && proxy.path) {\n            // If both a `host` and `path` are specified then it's most likely\n            // the result of a `url.parse()` call... we need to remove the\n            // `path` portion so that `net.connect()` doesn't attempt to open\n            // that as a Unix socket file.\n            delete proxy.path;\n            delete proxy.pathname;\n        }\n        this.proxy = proxy;\n    }\n    /**\n     * Called when the node-core HTTP client library is creating a\n     * new HTTP request.\n     *\n     * @api protected\n     */\n    callback(req, opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { proxy, secureProxy } = this;\n            const parsed = url_1.default.parse(req.path);\n            if (!parsed.protocol) {\n                parsed.protocol = 'http:';\n            }\n            if (!parsed.hostname) {\n                parsed.hostname = opts.hostname || opts.host || null;\n            }\n            if (parsed.port == null && typeof opts.port) {\n                parsed.port = String(opts.port);\n            }\n            if (parsed.port === '80') {\n                // if port is 80, then we can remove the port so that the\n                // \":80\" portion is not on the produced URL\n                parsed.port = '';\n            }\n            // Change the `http.ClientRequest` instance's \"path\" field\n            // to the absolute path of the URL that will be requested.\n            req.path = url_1.default.format(parsed);\n            // Inject the `Proxy-Authorization` header if necessary.\n            if (proxy.auth) {\n                req.setHeader('Proxy-Authorization', `Basic ${Buffer.from(proxy.auth).toString('base64')}`);\n            }\n            // Create a socket connection to the proxy server.\n            let socket;\n            if (secureProxy) {\n                debug('Creating `tls.Socket`: %o', proxy);\n                socket = tls_1.default.connect(proxy);\n            }\n            else {\n                debug('Creating `net.Socket`: %o', proxy);\n                socket = net_1.default.connect(proxy);\n            }\n            // At this point, the http ClientRequest's internal `_header` field\n            // might have already been set. If this is the case then we'll need\n            // to re-generate the string since we just changed the `req.path`.\n            if (req._header) {\n                let first;\n                let endOfHeaders;\n                debug('Regenerating stored HTTP header string for request');\n                req._header = null;\n                req._implicitHeader();\n                if (req.output && req.output.length > 0) {\n                    // Node < 12\n                    debug('Patching connection write() output buffer with updated header');\n                    first = req.output[0];\n                    endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n                    req.output[0] = req._header + first.substring(endOfHeaders);\n                    debug('Output buffer: %o', req.output);\n                }\n                else if (req.outputData && req.outputData.length > 0) {\n                    // Node >= 12\n                    debug('Patching connection write() output buffer with updated header');\n                    first = req.outputData[0].data;\n                    endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n                    req.outputData[0].data =\n                        req._header + first.substring(endOfHeaders);\n                    debug('Output buffer: %o', req.outputData[0].data);\n                }\n            }\n            // Wait for the socket's `connect` event, so that this `callback()`\n            // function throws instead of the `http` request machinery. This is\n            // important for i.e. `PacProxyAgent` which determines a failed proxy\n            // connection via the `callback()` function throwing.\n            yield (0, once_1.default)(socket, 'connect');\n            return socket;\n        });\n    }\n}\nexports.default = HttpProxyAgent;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}