{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"C:/Users/shinz/OneDrive/Desktop/web/ecommerce/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst fs = require('fs');\nconst path = require('path');\nconst {\n  promisify\n} = require('util');\nconst semver = require('semver');\nconst useNativeRecursiveOption = semver.satisfies(process.version, '>=10.12.0');\n\n// https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\nconst checkPath = pth => {\n  if (process.platform === 'win32') {\n    const pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''));\n    if (pathHasInvalidWinCharacters) {\n      const error = new Error(`Path contains invalid characters: ${pth}`);\n      error.code = 'EINVAL';\n      throw error;\n    }\n  }\n};\nconst processOptions = options => {\n  // https://github.com/sindresorhus/make-dir/issues/18\n  const defaults = {\n    mode: 0o777,\n    fs\n  };\n  return {\n    ...defaults,\n    ...options\n  };\n};\nconst permissionError = pth => {\n  // This replicates the exception of `fs.mkdir` with native the\n  // `recusive` option when run on an invalid drive under Windows.\n  const error = new Error(`operation not permitted, mkdir '${pth}'`);\n  error.code = 'EPERM';\n  error.errno = -4048;\n  error.path = pth;\n  error.syscall = 'mkdir';\n  return error;\n};\nconst makeDir = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (input, options) {\n    checkPath(input);\n    options = processOptions(options);\n    const mkdir = promisify(options.fs.mkdir);\n    const stat = promisify(options.fs.stat);\n    if (useNativeRecursiveOption && options.fs.mkdir === fs.mkdir) {\n      const pth = path.resolve(input);\n      yield mkdir(pth, {\n        mode: options.mode,\n        recursive: true\n      });\n      return pth;\n    }\n    const make = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (pth) {\n        try {\n          yield mkdir(pth, options.mode);\n          return pth;\n        } catch (error) {\n          if (error.code === 'EPERM') {\n            throw error;\n          }\n          if (error.code === 'ENOENT') {\n            if (path.dirname(pth) === pth) {\n              throw permissionError(pth);\n            }\n            if (error.message.includes('null bytes')) {\n              throw error;\n            }\n            yield make(path.dirname(pth));\n            return make(pth);\n          }\n          try {\n            const stats = yield stat(pth);\n            if (!stats.isDirectory()) {\n              throw new Error('The path is not a directory');\n            }\n          } catch (_) {\n            throw error;\n          }\n          return pth;\n        }\n      });\n      return function make(_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    return make(path.resolve(input));\n  });\n  return function makeDir(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nmodule.exports = makeDir;\nmodule.exports.sync = (input, options) => {\n  checkPath(input);\n  options = processOptions(options);\n  if (useNativeRecursiveOption && options.fs.mkdirSync === fs.mkdirSync) {\n    const pth = path.resolve(input);\n    fs.mkdirSync(pth, {\n      mode: options.mode,\n      recursive: true\n    });\n    return pth;\n  }\n  const make = pth => {\n    try {\n      options.fs.mkdirSync(pth, options.mode);\n    } catch (error) {\n      if (error.code === 'EPERM') {\n        throw error;\n      }\n      if (error.code === 'ENOENT') {\n        if (path.dirname(pth) === pth) {\n          throw permissionError(pth);\n        }\n        if (error.message.includes('null bytes')) {\n          throw error;\n        }\n        make(path.dirname(pth));\n        return make(pth);\n      }\n      try {\n        if (!options.fs.statSync(pth).isDirectory()) {\n          throw new Error('The path is not a directory');\n        }\n      } catch (_) {\n        throw error;\n      }\n    }\n    return pth;\n  };\n  return make(path.resolve(input));\n};","map":{"version":3,"names":["_asyncToGenerator","require","default","fs","path","promisify","semver","useNativeRecursiveOption","satisfies","process","version","checkPath","pth","platform","pathHasInvalidWinCharacters","test","replace","parse","root","error","Error","code","processOptions","options","defaults","mode","permissionError","errno","syscall","makeDir","_ref","input","mkdir","stat","resolve","recursive","make","_ref2","dirname","message","includes","stats","isDirectory","_","_x3","apply","arguments","_x","_x2","module","exports","sync","mkdirSync","statSync"],"sources":["C:/Users/shinz/OneDrive/Desktop/web/ecommerce/node_modules/make-dir/index.js"],"sourcesContent":["'use strict';\nconst fs = require('fs');\nconst path = require('path');\nconst {promisify} = require('util');\nconst semver = require('semver');\n\nconst useNativeRecursiveOption = semver.satisfies(process.version, '>=10.12.0');\n\n// https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\nconst checkPath = pth => {\n\tif (process.platform === 'win32') {\n\t\tconst pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''));\n\n\t\tif (pathHasInvalidWinCharacters) {\n\t\t\tconst error = new Error(`Path contains invalid characters: ${pth}`);\n\t\t\terror.code = 'EINVAL';\n\t\t\tthrow error;\n\t\t}\n\t}\n};\n\nconst processOptions = options => {\n\t// https://github.com/sindresorhus/make-dir/issues/18\n\tconst defaults = {\n\t\tmode: 0o777,\n\t\tfs\n\t};\n\n\treturn {\n\t\t...defaults,\n\t\t...options\n\t};\n};\n\nconst permissionError = pth => {\n\t// This replicates the exception of `fs.mkdir` with native the\n\t// `recusive` option when run on an invalid drive under Windows.\n\tconst error = new Error(`operation not permitted, mkdir '${pth}'`);\n\terror.code = 'EPERM';\n\terror.errno = -4048;\n\terror.path = pth;\n\terror.syscall = 'mkdir';\n\treturn error;\n};\n\nconst makeDir = async (input, options) => {\n\tcheckPath(input);\n\toptions = processOptions(options);\n\n\tconst mkdir = promisify(options.fs.mkdir);\n\tconst stat = promisify(options.fs.stat);\n\n\tif (useNativeRecursiveOption && options.fs.mkdir === fs.mkdir) {\n\t\tconst pth = path.resolve(input);\n\n\t\tawait mkdir(pth, {\n\t\t\tmode: options.mode,\n\t\t\trecursive: true\n\t\t});\n\n\t\treturn pth;\n\t}\n\n\tconst make = async pth => {\n\t\ttry {\n\t\t\tawait mkdir(pth, options.mode);\n\n\t\t\treturn pth;\n\t\t} catch (error) {\n\t\t\tif (error.code === 'EPERM') {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\tif (path.dirname(pth) === pth) {\n\t\t\t\t\tthrow permissionError(pth);\n\t\t\t\t}\n\n\t\t\t\tif (error.message.includes('null bytes')) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tawait make(path.dirname(pth));\n\n\t\t\t\treturn make(pth);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst stats = await stat(pth);\n\t\t\t\tif (!stats.isDirectory()) {\n\t\t\t\t\tthrow new Error('The path is not a directory');\n\t\t\t\t}\n\t\t\t} catch (_) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn pth;\n\t\t}\n\t};\n\n\treturn make(path.resolve(input));\n};\n\nmodule.exports = makeDir;\n\nmodule.exports.sync = (input, options) => {\n\tcheckPath(input);\n\toptions = processOptions(options);\n\n\tif (useNativeRecursiveOption && options.fs.mkdirSync === fs.mkdirSync) {\n\t\tconst pth = path.resolve(input);\n\n\t\tfs.mkdirSync(pth, {\n\t\t\tmode: options.mode,\n\t\t\trecursive: true\n\t\t});\n\n\t\treturn pth;\n\t}\n\n\tconst make = pth => {\n\t\ttry {\n\t\t\toptions.fs.mkdirSync(pth, options.mode);\n\t\t} catch (error) {\n\t\t\tif (error.code === 'EPERM') {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\tif (path.dirname(pth) === pth) {\n\t\t\t\t\tthrow permissionError(pth);\n\t\t\t\t}\n\n\t\t\t\tif (error.message.includes('null bytes')) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tmake(path.dirname(pth));\n\t\t\t\treturn make(pth);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!options.fs.statSync(pth).isDirectory()) {\n\t\t\t\t\tthrow new Error('The path is not a directory');\n\t\t\t\t}\n\t\t\t} catch (_) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn pth;\n\t};\n\n\treturn make(path.resolve(input));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}