{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SocksProxyAgent = void 0;\nconst socks_1 = require(\"socks\");\nconst agent_base_1 = require(\"agent-base\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst dns_1 = __importDefault(require(\"dns\"));\nconst tls_1 = __importDefault(require(\"tls\"));\nconst debug = (0, debug_1.default)('socks-proxy-agent');\nfunction parseSocksProxy(opts) {\n  var _a;\n  let port = 0;\n  let lookup = false;\n  let type = 5;\n  const host = opts.hostname;\n  if (host == null) {\n    throw new TypeError('No \"host\"');\n  }\n  if (typeof opts.port === 'number') {\n    port = opts.port;\n  } else if (typeof opts.port === 'string') {\n    port = parseInt(opts.port, 10);\n  }\n  // From RFC 1928, Section 3: https://tools.ietf.org/html/rfc1928#section-3\n  // \"The SOCKS service is conventionally located on TCP port 1080\"\n  if (port == null) {\n    port = 1080;\n  }\n  // figure out if we want socks v4 or v5, based on the \"protocol\" used.\n  // Defaults to 5.\n  if (opts.protocol != null) {\n    switch (opts.protocol.replace(':', '')) {\n      case 'socks4':\n        lookup = true;\n      // pass through\n      case 'socks4a':\n        type = 4;\n        break;\n      case 'socks5':\n        lookup = true;\n      // pass through\n      case 'socks': // no version specified, default to 5h\n      case 'socks5h':\n        type = 5;\n        break;\n      default:\n        throw new TypeError(`A \"socks\" protocol must be specified! Got: ${String(opts.protocol)}`);\n    }\n  }\n  if (typeof opts.type !== 'undefined') {\n    if (opts.type === 4 || opts.type === 5) {\n      type = opts.type;\n    } else {\n      throw new TypeError(`\"type\" must be 4 or 5, got: ${String(opts.type)}`);\n    }\n  }\n  const proxy = {\n    host,\n    port,\n    type\n  };\n  let userId = (_a = opts.userId) !== null && _a !== void 0 ? _a : opts.username;\n  let password = opts.password;\n  if (opts.auth != null) {\n    const auth = opts.auth.split(':');\n    userId = auth[0];\n    password = auth[1];\n  }\n  if (userId != null) {\n    Object.defineProperty(proxy, 'userId', {\n      value: userId,\n      enumerable: false\n    });\n  }\n  if (password != null) {\n    Object.defineProperty(proxy, 'password', {\n      value: password,\n      enumerable: false\n    });\n  }\n  return {\n    lookup,\n    proxy\n  };\n}\nconst normalizeProxyOptions = input => {\n  let proxyOptions;\n  if (typeof input === 'string') {\n    proxyOptions = new URL(input);\n  } else {\n    proxyOptions = input;\n  }\n  if (proxyOptions == null) {\n    throw new TypeError('a SOCKS proxy server `host` and `port` must be specified!');\n  }\n  return proxyOptions;\n};\nclass SocksProxyAgent extends agent_base_1.Agent {\n  constructor(input, options) {\n    var _a;\n    const proxyOptions = normalizeProxyOptions(input);\n    super(proxyOptions);\n    const parsedProxy = parseSocksProxy(proxyOptions);\n    this.shouldLookup = parsedProxy.lookup;\n    this.proxy = parsedProxy.proxy;\n    this.tlsConnectionOptions = proxyOptions.tls != null ? proxyOptions.tls : {};\n    this.timeout = (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : null;\n  }\n  /**\n   * Initiates a SOCKS connection to the specified SOCKS proxy server,\n   * which in turn connects to the specified remote host and port.\n   *\n   * @api protected\n   */\n  callback(req, opts) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        shouldLookup,\n        proxy,\n        timeout\n      } = this;\n      let {\n        host,\n        port,\n        lookup: lookupCallback\n      } = opts;\n      if (host == null) {\n        throw new Error('No `host` defined!');\n      }\n      if (shouldLookup) {\n        // Client-side DNS resolution for \"4\" and \"5\" socks proxy versions.\n        host = yield new Promise((resolve, reject) => {\n          // Use the request's custom lookup, if one was configured:\n          const lookupFn = lookupCallback !== null && lookupCallback !== void 0 ? lookupCallback : dns_1.default.lookup;\n          lookupFn(host, {}, (err, res) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(res);\n            }\n          });\n        });\n      }\n      const socksOpts = {\n        proxy,\n        destination: {\n          host,\n          port\n        },\n        command: 'connect',\n        timeout: timeout !== null && timeout !== void 0 ? timeout : undefined\n      };\n      const cleanup = tlsSocket => {\n        req.destroy();\n        socket.destroy();\n        if (tlsSocket) tlsSocket.destroy();\n      };\n      debug('Creating socks proxy connection: %o', socksOpts);\n      const {\n        socket\n      } = yield socks_1.SocksClient.createConnection(socksOpts);\n      debug('Successfully created socks proxy connection');\n      if (timeout !== null) {\n        socket.setTimeout(timeout);\n        socket.on('timeout', () => cleanup());\n      }\n      if (opts.secureEndpoint) {\n        // The proxy is connecting to a TLS server, so upgrade\n        // this socket connection to a TLS connection.\n        debug('Upgrading socket connection to TLS');\n        const servername = (_a = opts.servername) !== null && _a !== void 0 ? _a : opts.host;\n        const tlsSocket = tls_1.default.connect(Object.assign(Object.assign(Object.assign({}, omit(opts, 'host', 'hostname', 'path', 'port')), {\n          socket,\n          servername\n        }), this.tlsConnectionOptions));\n        tlsSocket.once('error', error => {\n          debug('socket TLS error', error.message);\n          cleanup(tlsSocket);\n        });\n        return tlsSocket;\n      }\n      return socket;\n    });\n  }\n}\nexports.SocksProxyAgent = SocksProxyAgent;\nfunction omit(obj, ...keys) {\n  const ret = {};\n  let key;\n  for (key in obj) {\n    if (!keys.includes(key)) {\n      ret[key] = obj[key];\n    }\n  }\n  return ret;\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","SocksProxyAgent","socks_1","require","agent_base_1","debug_1","dns_1","tls_1","debug","default","parseSocksProxy","opts","_a","port","lookup","type","host","hostname","TypeError","parseInt","protocol","replace","String","proxy","userId","username","password","auth","split","enumerable","normalizeProxyOptions","input","proxyOptions","URL","Agent","constructor","options","parsedProxy","shouldLookup","tlsConnectionOptions","tls","timeout","callback","req","lookupCallback","Error","lookupFn","err","res","socksOpts","destination","command","undefined","cleanup","tlsSocket","destroy","socket","SocksClient","createConnection","setTimeout","on","secureEndpoint","servername","connect","assign","omit","once","error","message","obj","keys","ret","key","includes"],"sources":["C:/Users/shinz/OneDrive/Desktop/web/ecommerce/node_modules/socks-proxy-agent/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SocksProxyAgent = void 0;\nconst socks_1 = require(\"socks\");\nconst agent_base_1 = require(\"agent-base\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst dns_1 = __importDefault(require(\"dns\"));\nconst tls_1 = __importDefault(require(\"tls\"));\nconst debug = (0, debug_1.default)('socks-proxy-agent');\nfunction parseSocksProxy(opts) {\n    var _a;\n    let port = 0;\n    let lookup = false;\n    let type = 5;\n    const host = opts.hostname;\n    if (host == null) {\n        throw new TypeError('No \"host\"');\n    }\n    if (typeof opts.port === 'number') {\n        port = opts.port;\n    }\n    else if (typeof opts.port === 'string') {\n        port = parseInt(opts.port, 10);\n    }\n    // From RFC 1928, Section 3: https://tools.ietf.org/html/rfc1928#section-3\n    // \"The SOCKS service is conventionally located on TCP port 1080\"\n    if (port == null) {\n        port = 1080;\n    }\n    // figure out if we want socks v4 or v5, based on the \"protocol\" used.\n    // Defaults to 5.\n    if (opts.protocol != null) {\n        switch (opts.protocol.replace(':', '')) {\n            case 'socks4':\n                lookup = true;\n            // pass through\n            case 'socks4a':\n                type = 4;\n                break;\n            case 'socks5':\n                lookup = true;\n            // pass through\n            case 'socks': // no version specified, default to 5h\n            case 'socks5h':\n                type = 5;\n                break;\n            default:\n                throw new TypeError(`A \"socks\" protocol must be specified! Got: ${String(opts.protocol)}`);\n        }\n    }\n    if (typeof opts.type !== 'undefined') {\n        if (opts.type === 4 || opts.type === 5) {\n            type = opts.type;\n        }\n        else {\n            throw new TypeError(`\"type\" must be 4 or 5, got: ${String(opts.type)}`);\n        }\n    }\n    const proxy = {\n        host,\n        port,\n        type\n    };\n    let userId = (_a = opts.userId) !== null && _a !== void 0 ? _a : opts.username;\n    let password = opts.password;\n    if (opts.auth != null) {\n        const auth = opts.auth.split(':');\n        userId = auth[0];\n        password = auth[1];\n    }\n    if (userId != null) {\n        Object.defineProperty(proxy, 'userId', {\n            value: userId,\n            enumerable: false\n        });\n    }\n    if (password != null) {\n        Object.defineProperty(proxy, 'password', {\n            value: password,\n            enumerable: false\n        });\n    }\n    return { lookup, proxy };\n}\nconst normalizeProxyOptions = (input) => {\n    let proxyOptions;\n    if (typeof input === 'string') {\n        proxyOptions = new URL(input);\n    }\n    else {\n        proxyOptions = input;\n    }\n    if (proxyOptions == null) {\n        throw new TypeError('a SOCKS proxy server `host` and `port` must be specified!');\n    }\n    return proxyOptions;\n};\nclass SocksProxyAgent extends agent_base_1.Agent {\n    constructor(input, options) {\n        var _a;\n        const proxyOptions = normalizeProxyOptions(input);\n        super(proxyOptions);\n        const parsedProxy = parseSocksProxy(proxyOptions);\n        this.shouldLookup = parsedProxy.lookup;\n        this.proxy = parsedProxy.proxy;\n        this.tlsConnectionOptions = proxyOptions.tls != null ? proxyOptions.tls : {};\n        this.timeout = (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : null;\n    }\n    /**\n     * Initiates a SOCKS connection to the specified SOCKS proxy server,\n     * which in turn connects to the specified remote host and port.\n     *\n     * @api protected\n     */\n    callback(req, opts) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { shouldLookup, proxy, timeout } = this;\n            let { host, port, lookup: lookupCallback } = opts;\n            if (host == null) {\n                throw new Error('No `host` defined!');\n            }\n            if (shouldLookup) {\n                // Client-side DNS resolution for \"4\" and \"5\" socks proxy versions.\n                host = yield new Promise((resolve, reject) => {\n                    // Use the request's custom lookup, if one was configured:\n                    const lookupFn = lookupCallback !== null && lookupCallback !== void 0 ? lookupCallback : dns_1.default.lookup;\n                    lookupFn(host, {}, (err, res) => {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve(res);\n                        }\n                    });\n                });\n            }\n            const socksOpts = {\n                proxy,\n                destination: { host, port },\n                command: 'connect',\n                timeout: timeout !== null && timeout !== void 0 ? timeout : undefined\n            };\n            const cleanup = (tlsSocket) => {\n                req.destroy();\n                socket.destroy();\n                if (tlsSocket)\n                    tlsSocket.destroy();\n            };\n            debug('Creating socks proxy connection: %o', socksOpts);\n            const { socket } = yield socks_1.SocksClient.createConnection(socksOpts);\n            debug('Successfully created socks proxy connection');\n            if (timeout !== null) {\n                socket.setTimeout(timeout);\n                socket.on('timeout', () => cleanup());\n            }\n            if (opts.secureEndpoint) {\n                // The proxy is connecting to a TLS server, so upgrade\n                // this socket connection to a TLS connection.\n                debug('Upgrading socket connection to TLS');\n                const servername = (_a = opts.servername) !== null && _a !== void 0 ? _a : opts.host;\n                const tlsSocket = tls_1.default.connect(Object.assign(Object.assign(Object.assign({}, omit(opts, 'host', 'hostname', 'path', 'port')), { socket,\n                    servername }), this.tlsConnectionOptions));\n                tlsSocket.once('error', (error) => {\n                    debug('socket TLS error', error.message);\n                    cleanup(tlsSocket);\n                });\n                return tlsSocket;\n            }\n            return socket;\n        });\n    }\n}\nexports.SocksProxyAgent = SocksProxyAgent;\nfunction omit(obj, ...keys) {\n    const ret = {};\n    let key;\n    for (key in obj) {\n        if (!keys.includes(key)) {\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}