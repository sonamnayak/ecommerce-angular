{"ast":null,"code":"import { environment as env } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CartService {\n  constructor(client) {\n    this.client = client;\n  }\n  getCartData() {\n    return this.client.get(env.apiAddress + '/cart');\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});\nexport { CartService };","map":{"version":3,"names":["environment","env","CartService","constructor","client","getCartData","get","apiAddress","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\shinz\\OneDrive\\Desktop\\web\\ecommerce\\client\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs'\nimport { Cart } from '../models/cart.model';\nimport { environment as env } from 'src/environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  constructor(private client: HttpClient) { }\n\n  getCartData(): Observable<Cart[]> {\n    return this.client.get<Cart[]>(env.apiAddress + '/cart')\n  }\n}\n"],"mappings":"AAIA,SAASA,WAAW,IAAIC,GAAG,QAAQ,8BAA8B;;;AAEjE,MAGaC,WAAW;EAEtBC,YAAoBC,MAAkB;IAAlB,KAAAA,MAAM,GAANA,MAAM;EAAgB;EAE1CC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACD,MAAM,CAACE,GAAG,CAASL,GAAG,CAACM,UAAU,GAAG,OAAO,CAAC;EAC1D;;AANWL,WAAW,C;mBAAXA,WAAW,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXT,WAAW,C;SAAXA,WAAW;EAAAU,OAAA,EAAXV,WAAW,CAAAW,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPZ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}