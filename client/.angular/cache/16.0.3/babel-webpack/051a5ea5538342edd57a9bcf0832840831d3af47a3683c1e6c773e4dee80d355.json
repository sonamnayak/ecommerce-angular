{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/shinz/OneDrive/Desktop/web/ecommerce/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst {\n  join,\n  sep\n} = require('path');\nconst getOptions = require('./common/get-options.js');\nconst mkdir = require('./mkdir.js');\nconst mkdtemp = require('./mkdtemp.js');\nconst rm = require('./rm/index.js');\n\n// create a temp directory, ensure its permissions match its parent, then call\n// the supplied function passing it the path to the directory. clean up after\n// the function finishes, whether it throws or not\nconst withTempDir = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (root, fn, opts) {\n    const options = getOptions(opts, {\n      copy: ['tmpPrefix']\n    });\n    // create the directory, and fix its ownership\n    yield mkdir(root, {\n      recursive: true,\n      owner: 'inherit'\n    });\n    const target = yield mkdtemp(join(`${root}${sep}`, options.tmpPrefix || ''), {\n      owner: 'inherit'\n    });\n    let err;\n    let result;\n    try {\n      result = yield fn(target);\n    } catch (_err) {\n      err = _err;\n    }\n    try {\n      yield rm(target, {\n        force: true,\n        recursive: true\n      });\n    } catch {\n      // ignore errors\n    }\n    if (err) {\n      throw err;\n    }\n    return result;\n  });\n  return function withTempDir(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nmodule.exports = withTempDir;","map":{"version":3,"names":["join","sep","require","getOptions","mkdir","mkdtemp","rm","withTempDir","_ref","_asyncToGenerator","root","fn","opts","options","copy","recursive","owner","target","tmpPrefix","err","result","_err","force","_x","_x2","_x3","apply","arguments","module","exports"],"sources":["C:/Users/shinz/OneDrive/Desktop/web/ecommerce/node_modules/make-fetch-happen/node_modules/@npmcli/fs/lib/with-temp-dir.js"],"sourcesContent":["const { join, sep } = require('path')\n\nconst getOptions = require('./common/get-options.js')\nconst mkdir = require('./mkdir.js')\nconst mkdtemp = require('./mkdtemp.js')\nconst rm = require('./rm/index.js')\n\n// create a temp directory, ensure its permissions match its parent, then call\n// the supplied function passing it the path to the directory. clean up after\n// the function finishes, whether it throws or not\nconst withTempDir = async (root, fn, opts) => {\n  const options = getOptions(opts, {\n    copy: ['tmpPrefix'],\n  })\n  // create the directory, and fix its ownership\n  await mkdir(root, { recursive: true, owner: 'inherit' })\n\n  const target = await mkdtemp(join(`${root}${sep}`, options.tmpPrefix || ''), { owner: 'inherit' })\n  let err\n  let result\n\n  try {\n    result = await fn(target)\n  } catch (_err) {\n    err = _err\n  }\n\n  try {\n    await rm(target, { force: true, recursive: true })\n  } catch {\n    // ignore errors\n  }\n\n  if (err) {\n    throw err\n  }\n\n  return result\n}\n\nmodule.exports = withTempDir\n"],"mappings":";AAAA,MAAM;EAAEA,IAAI;EAAEC;AAAI,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AAErC,MAAMC,UAAU,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AACrD,MAAME,KAAK,GAAGF,OAAO,CAAC,YAAY,CAAC;AACnC,MAAMG,OAAO,GAAGH,OAAO,CAAC,cAAc,CAAC;AACvC,MAAMI,EAAE,GAAGJ,OAAO,CAAC,eAAe,CAAC;;AAEnC;AACA;AACA;AACA,MAAMK,WAAW;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,IAAI,EAAEC,EAAE,EAAEC,IAAI,EAAK;IAC5C,MAAMC,OAAO,GAAGV,UAAU,CAACS,IAAI,EAAE;MAC/BE,IAAI,EAAE,CAAC,WAAW;IACpB,CAAC,CAAC;IACF;IACA,MAAMV,KAAK,CAACM,IAAI,EAAE;MAAEK,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAU,CAAC,CAAC;IAExD,MAAMC,MAAM,SAASZ,OAAO,CAACL,IAAI,CAAE,GAAEU,IAAK,GAAET,GAAI,EAAC,EAAEY,OAAO,CAACK,SAAS,IAAI,EAAE,CAAC,EAAE;MAAEF,KAAK,EAAE;IAAU,CAAC,CAAC;IAClG,IAAIG,GAAG;IACP,IAAIC,MAAM;IAEV,IAAI;MACFA,MAAM,SAAST,EAAE,CAACM,MAAM,CAAC;IAC3B,CAAC,CAAC,OAAOI,IAAI,EAAE;MACbF,GAAG,GAAGE,IAAI;IACZ;IAEA,IAAI;MACF,MAAMf,EAAE,CAACW,MAAM,EAAE;QAAEK,KAAK,EAAE,IAAI;QAAEP,SAAS,EAAE;MAAK,CAAC,CAAC;IACpD,CAAC,CAAC,MAAM;MACN;IAAA;IAGF,IAAII,GAAG,EAAE;MACP,MAAMA,GAAG;IACX;IAEA,OAAOC,MAAM;EACf,CAAC;EAAA,gBA5BKb,WAAWA,CAAAgB,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAjB,IAAA,CAAAkB,KAAA,OAAAC,SAAA;EAAA;AAAA,GA4BhB;AAEDC,MAAM,CAACC,OAAO,GAAGtB,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}